// source: geo.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf')
var goog = jspb
var global = function () {
  if (this) {
    return this
  }
  if (typeof window !== 'undefined') {
    return window
  }
  if (typeof global !== 'undefined') {
    return global
  }
  if (typeof self !== 'undefined') {
    return self
  }
  return Function('return this')()
}.call(null)

goog.exportSymbol('proto.geo.v1.AddGeoLocationRequest', null, global)
goog.exportSymbol('proto.geo.v1.Address', null, global)
goog.exportSymbol('proto.geo.v1.AddressRequest', null, global)
goog.exportSymbol('proto.geo.v1.AddressResponse', null, global)
goog.exportSymbol('proto.geo.v1.AddressRouteRequest', null, global)
goog.exportSymbol('proto.geo.v1.AddressType', null, global)
goog.exportSymbol('proto.geo.v1.AddressTypesRequest', null, global)
goog.exportSymbol('proto.geo.v1.AddressTypesResponse', null, global)
goog.exportSymbol('proto.geo.v1.AddressesResponse', null, global)
goog.exportSymbol('proto.geo.v1.DeleteAddressRequest', null, global)
goog.exportSymbol('proto.geo.v1.DeleteGeoLocationRequest', null, global)
goog.exportSymbol('proto.geo.v1.DeleteResponse', null, global)
goog.exportSymbol('proto.geo.v1.GeoLocation', null, global)
goog.exportSymbol('proto.geo.v1.GeoLocationResponse', null, global)
goog.exportSymbol('proto.geo.v1.GeoLocationsResponse', null, global)
goog.exportSymbol('proto.geo.v1.GeoRequest', null, global)
goog.exportSymbol('proto.geo.v1.GeoResponse', null, global)
goog.exportSymbol('proto.geo.v1.GeoRouteRequest', null, global)
goog.exportSymbol('proto.geo.v1.GetAddressRequest', null, global)
goog.exportSymbol('proto.geo.v1.GetAddressesRequest', null, global)
goog.exportSymbol('proto.geo.v1.GetGeoLocationRequest', null, global)
goog.exportSymbol('proto.geo.v1.Point', null, global)
goog.exportSymbol('proto.geo.v1.RouteLeg', null, global)
goog.exportSymbol('proto.geo.v1.RouteResponse', null, global)
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geo.v1.Point = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.geo.v1.Point, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geo.v1.Point.displayName = 'proto.geo.v1.Point'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geo.v1.GeoRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.geo.v1.GeoRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geo.v1.GeoRequest.displayName = 'proto.geo.v1.GeoRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geo.v1.GeoResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.geo.v1.GeoResponse, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geo.v1.GeoResponse.displayName = 'proto.geo.v1.GeoResponse'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geo.v1.GeoLocation = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.geo.v1.GeoLocation, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geo.v1.GeoLocation.displayName = 'proto.geo.v1.GeoLocation'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geo.v1.AddGeoLocationRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.geo.v1.AddGeoLocationRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geo.v1.AddGeoLocationRequest.displayName =
    'proto.geo.v1.AddGeoLocationRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geo.v1.GetGeoLocationRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.geo.v1.GetGeoLocationRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geo.v1.GetGeoLocationRequest.displayName =
    'proto.geo.v1.GetGeoLocationRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geo.v1.GeoLocationResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.geo.v1.GeoLocationResponse, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geo.v1.GeoLocationResponse.displayName =
    'proto.geo.v1.GeoLocationResponse'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geo.v1.GeoLocationsResponse = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.geo.v1.GeoLocationsResponse.repeatedFields_,
    null
  )
}
goog.inherits(proto.geo.v1.GeoLocationsResponse, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geo.v1.GeoLocationsResponse.displayName =
    'proto.geo.v1.GeoLocationsResponse'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geo.v1.DeleteGeoLocationRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.geo.v1.DeleteGeoLocationRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geo.v1.DeleteGeoLocationRequest.displayName =
    'proto.geo.v1.DeleteGeoLocationRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geo.v1.DeleteResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.geo.v1.DeleteResponse, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geo.v1.DeleteResponse.displayName = 'proto.geo.v1.DeleteResponse'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geo.v1.Address = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.geo.v1.Address, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geo.v1.Address.displayName = 'proto.geo.v1.Address'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geo.v1.AddressTypesRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.geo.v1.AddressTypesRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geo.v1.AddressTypesRequest.displayName =
    'proto.geo.v1.AddressTypesRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geo.v1.AddressTypesResponse = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.geo.v1.AddressTypesResponse.repeatedFields_,
    null
  )
}
goog.inherits(proto.geo.v1.AddressTypesResponse, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geo.v1.AddressTypesResponse.displayName =
    'proto.geo.v1.AddressTypesResponse'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geo.v1.AddressRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.geo.v1.AddressRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geo.v1.AddressRequest.displayName = 'proto.geo.v1.AddressRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geo.v1.GetAddressRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.geo.v1.GetAddressRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geo.v1.GetAddressRequest.displayName = 'proto.geo.v1.GetAddressRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geo.v1.GetAddressesRequest = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.geo.v1.GetAddressesRequest.repeatedFields_,
    null
  )
}
goog.inherits(proto.geo.v1.GetAddressesRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geo.v1.GetAddressesRequest.displayName =
    'proto.geo.v1.GetAddressesRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geo.v1.AddressResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.geo.v1.AddressResponse, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geo.v1.AddressResponse.displayName = 'proto.geo.v1.AddressResponse'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geo.v1.AddressesResponse = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.geo.v1.AddressesResponse.repeatedFields_,
    null
  )
}
goog.inherits(proto.geo.v1.AddressesResponse, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geo.v1.AddressesResponse.displayName = 'proto.geo.v1.AddressesResponse'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geo.v1.DeleteAddressRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.geo.v1.DeleteAddressRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geo.v1.DeleteAddressRequest.displayName =
    'proto.geo.v1.DeleteAddressRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geo.v1.RouteLeg = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null)
}
goog.inherits(proto.geo.v1.RouteLeg, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geo.v1.RouteLeg.displayName = 'proto.geo.v1.RouteLeg'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geo.v1.GeoRouteRequest = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.geo.v1.GeoRouteRequest.repeatedFields_,
    null
  )
}
goog.inherits(proto.geo.v1.GeoRouteRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geo.v1.GeoRouteRequest.displayName = 'proto.geo.v1.GeoRouteRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geo.v1.AddressRouteRequest = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.geo.v1.AddressRouteRequest.repeatedFields_,
    null
  )
}
goog.inherits(proto.geo.v1.AddressRouteRequest, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geo.v1.AddressRouteRequest.displayName =
    'proto.geo.v1.AddressRouteRequest'
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.geo.v1.RouteResponse = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.geo.v1.RouteResponse.repeatedFields_,
    null
  )
}
goog.inherits(proto.geo.v1.RouteResponse, jspb.Message)
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.geo.v1.RouteResponse.displayName = 'proto.geo.v1.RouteResponse'
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.geo.v1.Point.prototype.toObject = function (opt_includeInstance) {
    return proto.geo.v1.Point.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.geo.v1.Point} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.geo.v1.Point.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
        longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
        formattedaddress: jspb.Message.getFieldWithDefault(msg, 3, '')
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geo.v1.Point}
 */
proto.geo.v1.Point.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.geo.v1.Point()
  return proto.geo.v1.Point.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geo.v1.Point} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geo.v1.Point}
 */
proto.geo.v1.Point.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readFloat())
        msg.setLatitude(value)
        break
      case 2:
        var value = /** @type {number} */ (reader.readFloat())
        msg.setLongitude(value)
        break
      case 3:
        var value = /** @type {string} */ (reader.readString())
        msg.setFormattedaddress(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geo.v1.Point.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.geo.v1.Point.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geo.v1.Point} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geo.v1.Point.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getLatitude()
  if (f !== 0.0) {
    writer.writeFloat(1, f)
  }
  f = message.getLongitude()
  if (f !== 0.0) {
    writer.writeFloat(2, f)
  }
  f = message.getFormattedaddress()
  if (f.length > 0) {
    writer.writeString(3, f)
  }
}

/**
 * optional float latitude = 1;
 * @return {number}
 */
proto.geo.v1.Point.prototype.getLatitude = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0)
  )
}

/**
 * @param {number} value
 * @return {!proto.geo.v1.Point} returns this
 */
proto.geo.v1.Point.prototype.setLatitude = function (value) {
  return jspb.Message.setProto3FloatField(this, 1, value)
}

/**
 * optional float longitude = 2;
 * @return {number}
 */
proto.geo.v1.Point.prototype.getLongitude = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0)
  )
}

/**
 * @param {number} value
 * @return {!proto.geo.v1.Point} returns this
 */
proto.geo.v1.Point.prototype.setLongitude = function (value) {
  return jspb.Message.setProto3FloatField(this, 2, value)
}

/**
 * optional string formattedAddress = 3;
 * @return {string}
 */
proto.geo.v1.Point.prototype.getFormattedaddress = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.Point} returns this
 */
proto.geo.v1.Point.prototype.setFormattedaddress = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value)
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.geo.v1.GeoRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.geo.v1.GeoRequest.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.geo.v1.GeoRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.geo.v1.GeoRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        postalcode: jspb.Message.getFieldWithDefault(msg, 1, ''),
        country: jspb.Message.getFieldWithDefault(msg, 2, ''),
        street: jspb.Message.getFieldWithDefault(msg, 3, ''),
        city: jspb.Message.getFieldWithDefault(msg, 4, ''),
        state: jspb.Message.getFieldWithDefault(msg, 5, ''),
        latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
        longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0)
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geo.v1.GeoRequest}
 */
proto.geo.v1.GeoRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.geo.v1.GeoRequest()
  return proto.geo.v1.GeoRequest.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geo.v1.GeoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geo.v1.GeoRequest}
 */
proto.geo.v1.GeoRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setPostalcode(value)
        break
      case 2:
        var value = /** @type {string} */ (reader.readString())
        msg.setCountry(value)
        break
      case 3:
        var value = /** @type {string} */ (reader.readString())
        msg.setStreet(value)
        break
      case 4:
        var value = /** @type {string} */ (reader.readString())
        msg.setCity(value)
        break
      case 5:
        var value = /** @type {string} */ (reader.readString())
        msg.setState(value)
        break
      case 6:
        var value = /** @type {number} */ (reader.readFloat())
        msg.setLatitude(value)
        break
      case 7:
        var value = /** @type {number} */ (reader.readFloat())
        msg.setLongitude(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geo.v1.GeoRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.geo.v1.GeoRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geo.v1.GeoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geo.v1.GeoRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getPostalcode()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getCountry()
  if (f.length > 0) {
    writer.writeString(2, f)
  }
  f = message.getStreet()
  if (f.length > 0) {
    writer.writeString(3, f)
  }
  f = message.getCity()
  if (f.length > 0) {
    writer.writeString(4, f)
  }
  f = message.getState()
  if (f.length > 0) {
    writer.writeString(5, f)
  }
  f = message.getLatitude()
  if (f !== 0.0) {
    writer.writeFloat(6, f)
  }
  f = message.getLongitude()
  if (f !== 0.0) {
    writer.writeFloat(7, f)
  }
}

/**
 * optional string postalCode = 1;
 * @return {string}
 */
proto.geo.v1.GeoRequest.prototype.getPostalcode = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.GeoRequest} returns this
 */
proto.geo.v1.GeoRequest.prototype.setPostalcode = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * optional string country = 2;
 * @return {string}
 */
proto.geo.v1.GeoRequest.prototype.getCountry = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.GeoRequest} returns this
 */
proto.geo.v1.GeoRequest.prototype.setCountry = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value)
}

/**
 * optional string street = 3;
 * @return {string}
 */
proto.geo.v1.GeoRequest.prototype.getStreet = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.GeoRequest} returns this
 */
proto.geo.v1.GeoRequest.prototype.setStreet = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value)
}

/**
 * optional string city = 4;
 * @return {string}
 */
proto.geo.v1.GeoRequest.prototype.getCity = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.GeoRequest} returns this
 */
proto.geo.v1.GeoRequest.prototype.setCity = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value)
}

/**
 * optional string state = 5;
 * @return {string}
 */
proto.geo.v1.GeoRequest.prototype.getState = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.GeoRequest} returns this
 */
proto.geo.v1.GeoRequest.prototype.setState = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value)
}

/**
 * optional float latitude = 6;
 * @return {number}
 */
proto.geo.v1.GeoRequest.prototype.getLatitude = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0)
  )
}

/**
 * @param {number} value
 * @return {!proto.geo.v1.GeoRequest} returns this
 */
proto.geo.v1.GeoRequest.prototype.setLatitude = function (value) {
  return jspb.Message.setProto3FloatField(this, 6, value)
}

/**
 * optional float longitude = 7;
 * @return {number}
 */
proto.geo.v1.GeoRequest.prototype.getLongitude = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0)
  )
}

/**
 * @param {number} value
 * @return {!proto.geo.v1.GeoRequest} returns this
 */
proto.geo.v1.GeoRequest.prototype.setLongitude = function (value) {
  return jspb.Message.setProto3FloatField(this, 7, value)
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.geo.v1.GeoResponse.prototype.toObject = function (opt_includeInstance) {
    return proto.geo.v1.GeoResponse.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.geo.v1.GeoResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.geo.v1.GeoResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        point:
          (f = msg.getPoint()) &&
          proto.geo.v1.Point.toObject(includeInstance, f)
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geo.v1.GeoResponse}
 */
proto.geo.v1.GeoResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.geo.v1.GeoResponse()
  return proto.geo.v1.GeoResponse.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geo.v1.GeoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geo.v1.GeoResponse}
 */
proto.geo.v1.GeoResponse.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = new proto.geo.v1.Point()
        reader.readMessage(
          value,
          proto.geo.v1.Point.deserializeBinaryFromReader
        )
        msg.setPoint(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geo.v1.GeoResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.geo.v1.GeoResponse.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geo.v1.GeoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geo.v1.GeoResponse.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getPoint()
  if (f != null) {
    writer.writeMessage(1, f, proto.geo.v1.Point.serializeBinaryToWriter)
  }
}

/**
 * optional Point point = 1;
 * @return {?proto.geo.v1.Point}
 */
proto.geo.v1.GeoResponse.prototype.getPoint = function () {
  return /** @type{?proto.geo.v1.Point} */ (
    jspb.Message.getWrapperField(this, proto.geo.v1.Point, 1)
  )
}

/**
 * @param {?proto.geo.v1.Point|undefined} value
 * @return {!proto.geo.v1.GeoResponse} returns this
 */
proto.geo.v1.GeoResponse.prototype.setPoint = function (value) {
  return jspb.Message.setWrapperField(this, 1, value)
}

/**
 * Clears the message field making it undefined.
 * @return {!proto.geo.v1.GeoResponse} returns this
 */
proto.geo.v1.GeoResponse.prototype.clearPoint = function () {
  return this.setPoint(undefined)
}

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geo.v1.GeoResponse.prototype.hasPoint = function () {
  return jspb.Message.getField(this, 1) != null
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.geo.v1.GeoLocation.prototype.toObject = function (opt_includeInstance) {
    return proto.geo.v1.GeoLocation.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.geo.v1.GeoLocation} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.geo.v1.GeoLocation.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        hash: jspb.Message.getFieldWithDefault(msg, 1, ''),
        id: jspb.Message.getFieldWithDefault(msg, 2, '')
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geo.v1.GeoLocation}
 */
proto.geo.v1.GeoLocation.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.geo.v1.GeoLocation()
  return proto.geo.v1.GeoLocation.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geo.v1.GeoLocation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geo.v1.GeoLocation}
 */
proto.geo.v1.GeoLocation.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setHash(value)
        break
      case 2:
        var value = /** @type {string} */ (reader.readString())
        msg.setId(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geo.v1.GeoLocation.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.geo.v1.GeoLocation.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geo.v1.GeoLocation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geo.v1.GeoLocation.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getHash()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getId()
  if (f.length > 0) {
    writer.writeString(2, f)
  }
}

/**
 * optional string hash = 1;
 * @return {string}
 */
proto.geo.v1.GeoLocation.prototype.getHash = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.GeoLocation} returns this
 */
proto.geo.v1.GeoLocation.prototype.setHash = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * optional string id = 2;
 * @return {string}
 */
proto.geo.v1.GeoLocation.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.GeoLocation} returns this
 */
proto.geo.v1.GeoLocation.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value)
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.geo.v1.AddGeoLocationRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.geo.v1.AddGeoLocationRequest.toObject(
      opt_includeInstance,
      this
    )
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.geo.v1.AddGeoLocationRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.geo.v1.AddGeoLocationRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ''),
        hash: jspb.Message.getFieldWithDefault(msg, 2, ''),
        longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
        latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geo.v1.AddGeoLocationRequest}
 */
proto.geo.v1.AddGeoLocationRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.geo.v1.AddGeoLocationRequest()
  return proto.geo.v1.AddGeoLocationRequest.deserializeBinaryFromReader(
    msg,
    reader
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geo.v1.AddGeoLocationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geo.v1.AddGeoLocationRequest}
 */
proto.geo.v1.AddGeoLocationRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setId(value)
        break
      case 2:
        var value = /** @type {string} */ (reader.readString())
        msg.setHash(value)
        break
      case 3:
        var value = /** @type {number} */ (reader.readFloat())
        msg.setLongitude(value)
        break
      case 4:
        var value = /** @type {number} */ (reader.readFloat())
        msg.setLatitude(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geo.v1.AddGeoLocationRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.geo.v1.AddGeoLocationRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geo.v1.AddGeoLocationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geo.v1.AddGeoLocationRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getId()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getHash()
  if (f.length > 0) {
    writer.writeString(2, f)
  }
  f = message.getLongitude()
  if (f !== 0.0) {
    writer.writeFloat(3, f)
  }
  f = message.getLatitude()
  if (f !== 0.0) {
    writer.writeFloat(4, f)
  }
}

/**
 * optional string id = 1;
 * @return {string}
 */
proto.geo.v1.AddGeoLocationRequest.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.AddGeoLocationRequest} returns this
 */
proto.geo.v1.AddGeoLocationRequest.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * optional string hash = 2;
 * @return {string}
 */
proto.geo.v1.AddGeoLocationRequest.prototype.getHash = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.AddGeoLocationRequest} returns this
 */
proto.geo.v1.AddGeoLocationRequest.prototype.setHash = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value)
}

/**
 * optional float longitude = 3;
 * @return {number}
 */
proto.geo.v1.AddGeoLocationRequest.prototype.getLongitude = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0)
  )
}

/**
 * @param {number} value
 * @return {!proto.geo.v1.AddGeoLocationRequest} returns this
 */
proto.geo.v1.AddGeoLocationRequest.prototype.setLongitude = function (value) {
  return jspb.Message.setProto3FloatField(this, 3, value)
}

/**
 * optional float latitude = 4;
 * @return {number}
 */
proto.geo.v1.AddGeoLocationRequest.prototype.getLatitude = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0)
  )
}

/**
 * @param {number} value
 * @return {!proto.geo.v1.AddGeoLocationRequest} returns this
 */
proto.geo.v1.AddGeoLocationRequest.prototype.setLatitude = function (value) {
  return jspb.Message.setProto3FloatField(this, 4, value)
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.geo.v1.GetGeoLocationRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.geo.v1.GetGeoLocationRequest.toObject(
      opt_includeInstance,
      this
    )
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.geo.v1.GetGeoLocationRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.geo.v1.GetGeoLocationRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ''),
        hash: jspb.Message.getFieldWithDefault(msg, 2, ''),
        longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
        latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geo.v1.GetGeoLocationRequest}
 */
proto.geo.v1.GetGeoLocationRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.geo.v1.GetGeoLocationRequest()
  return proto.geo.v1.GetGeoLocationRequest.deserializeBinaryFromReader(
    msg,
    reader
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geo.v1.GetGeoLocationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geo.v1.GetGeoLocationRequest}
 */
proto.geo.v1.GetGeoLocationRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setId(value)
        break
      case 2:
        var value = /** @type {string} */ (reader.readString())
        msg.setHash(value)
        break
      case 3:
        var value = /** @type {number} */ (reader.readFloat())
        msg.setLongitude(value)
        break
      case 4:
        var value = /** @type {number} */ (reader.readFloat())
        msg.setLatitude(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geo.v1.GetGeoLocationRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.geo.v1.GetGeoLocationRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geo.v1.GetGeoLocationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geo.v1.GetGeoLocationRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getId()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getHash()
  if (f.length > 0) {
    writer.writeString(2, f)
  }
  f = message.getLongitude()
  if (f !== 0.0) {
    writer.writeFloat(3, f)
  }
  f = message.getLatitude()
  if (f !== 0.0) {
    writer.writeFloat(4, f)
  }
}

/**
 * optional string id = 1;
 * @return {string}
 */
proto.geo.v1.GetGeoLocationRequest.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.GetGeoLocationRequest} returns this
 */
proto.geo.v1.GetGeoLocationRequest.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * optional string hash = 2;
 * @return {string}
 */
proto.geo.v1.GetGeoLocationRequest.prototype.getHash = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.GetGeoLocationRequest} returns this
 */
proto.geo.v1.GetGeoLocationRequest.prototype.setHash = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value)
}

/**
 * optional float longitude = 3;
 * @return {number}
 */
proto.geo.v1.GetGeoLocationRequest.prototype.getLongitude = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0)
  )
}

/**
 * @param {number} value
 * @return {!proto.geo.v1.GetGeoLocationRequest} returns this
 */
proto.geo.v1.GetGeoLocationRequest.prototype.setLongitude = function (value) {
  return jspb.Message.setProto3FloatField(this, 3, value)
}

/**
 * optional float latitude = 4;
 * @return {number}
 */
proto.geo.v1.GetGeoLocationRequest.prototype.getLatitude = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0)
  )
}

/**
 * @param {number} value
 * @return {!proto.geo.v1.GetGeoLocationRequest} returns this
 */
proto.geo.v1.GetGeoLocationRequest.prototype.setLatitude = function (value) {
  return jspb.Message.setProto3FloatField(this, 4, value)
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.geo.v1.GeoLocationResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.geo.v1.GeoLocationResponse.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.geo.v1.GeoLocationResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.geo.v1.GeoLocationResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        ok: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        location:
          (f = msg.getLocation()) &&
          proto.geo.v1.GeoLocation.toObject(includeInstance, f)
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geo.v1.GeoLocationResponse}
 */
proto.geo.v1.GeoLocationResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.geo.v1.GeoLocationResponse()
  return proto.geo.v1.GeoLocationResponse.deserializeBinaryFromReader(
    msg,
    reader
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geo.v1.GeoLocationResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geo.v1.GeoLocationResponse}
 */
proto.geo.v1.GeoLocationResponse.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool())
        msg.setOk(value)
        break
      case 2:
        var value = new proto.geo.v1.GeoLocation()
        reader.readMessage(
          value,
          proto.geo.v1.GeoLocation.deserializeBinaryFromReader
        )
        msg.setLocation(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geo.v1.GeoLocationResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.geo.v1.GeoLocationResponse.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geo.v1.GeoLocationResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geo.v1.GeoLocationResponse.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getOk()
  if (f) {
    writer.writeBool(1, f)
  }
  f = message.getLocation()
  if (f != null) {
    writer.writeMessage(2, f, proto.geo.v1.GeoLocation.serializeBinaryToWriter)
  }
}

/**
 * optional bool ok = 1;
 * @return {boolean}
 */
proto.geo.v1.GeoLocationResponse.prototype.getOk = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  )
}

/**
 * @param {boolean} value
 * @return {!proto.geo.v1.GeoLocationResponse} returns this
 */
proto.geo.v1.GeoLocationResponse.prototype.setOk = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value)
}

/**
 * optional GeoLocation location = 2;
 * @return {?proto.geo.v1.GeoLocation}
 */
proto.geo.v1.GeoLocationResponse.prototype.getLocation = function () {
  return /** @type{?proto.geo.v1.GeoLocation} */ (
    jspb.Message.getWrapperField(this, proto.geo.v1.GeoLocation, 2)
  )
}

/**
 * @param {?proto.geo.v1.GeoLocation|undefined} value
 * @return {!proto.geo.v1.GeoLocationResponse} returns this
 */
proto.geo.v1.GeoLocationResponse.prototype.setLocation = function (value) {
  return jspb.Message.setWrapperField(this, 2, value)
}

/**
 * Clears the message field making it undefined.
 * @return {!proto.geo.v1.GeoLocationResponse} returns this
 */
proto.geo.v1.GeoLocationResponse.prototype.clearLocation = function () {
  return this.setLocation(undefined)
}

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geo.v1.GeoLocationResponse.prototype.hasLocation = function () {
  return jspb.Message.getField(this, 2) != null
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.geo.v1.GeoLocationsResponse.repeatedFields_ = [2]

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.geo.v1.GeoLocationsResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.geo.v1.GeoLocationsResponse.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.geo.v1.GeoLocationsResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.geo.v1.GeoLocationsResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        ok: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        locationsList: jspb.Message.toObjectList(
          msg.getLocationsList(),
          proto.geo.v1.GeoLocation.toObject,
          includeInstance
        )
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geo.v1.GeoLocationsResponse}
 */
proto.geo.v1.GeoLocationsResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.geo.v1.GeoLocationsResponse()
  return proto.geo.v1.GeoLocationsResponse.deserializeBinaryFromReader(
    msg,
    reader
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geo.v1.GeoLocationsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geo.v1.GeoLocationsResponse}
 */
proto.geo.v1.GeoLocationsResponse.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool())
        msg.setOk(value)
        break
      case 2:
        var value = new proto.geo.v1.GeoLocation()
        reader.readMessage(
          value,
          proto.geo.v1.GeoLocation.deserializeBinaryFromReader
        )
        msg.addLocations(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geo.v1.GeoLocationsResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.geo.v1.GeoLocationsResponse.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geo.v1.GeoLocationsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geo.v1.GeoLocationsResponse.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getOk()
  if (f) {
    writer.writeBool(1, f)
  }
  f = message.getLocationsList()
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.geo.v1.GeoLocation.serializeBinaryToWriter
    )
  }
}

/**
 * optional bool ok = 1;
 * @return {boolean}
 */
proto.geo.v1.GeoLocationsResponse.prototype.getOk = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  )
}

/**
 * @param {boolean} value
 * @return {!proto.geo.v1.GeoLocationsResponse} returns this
 */
proto.geo.v1.GeoLocationsResponse.prototype.setOk = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value)
}

/**
 * repeated GeoLocation locations = 2;
 * @return {!Array<!proto.geo.v1.GeoLocation>}
 */
proto.geo.v1.GeoLocationsResponse.prototype.getLocationsList = function () {
  return /** @type{!Array<!proto.geo.v1.GeoLocation>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.geo.v1.GeoLocation, 2)
  )
}

/**
 * @param {!Array<!proto.geo.v1.GeoLocation>} value
 * @return {!proto.geo.v1.GeoLocationsResponse} returns this
 */
proto.geo.v1.GeoLocationsResponse.prototype.setLocationsList = function (
  value
) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value)
}

/**
 * @param {!proto.geo.v1.GeoLocation=} opt_value
 * @param {number=} opt_index
 * @return {!proto.geo.v1.GeoLocation}
 */
proto.geo.v1.GeoLocationsResponse.prototype.addLocations = function (
  opt_value,
  opt_index
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    2,
    opt_value,
    proto.geo.v1.GeoLocation,
    opt_index
  )
}

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.geo.v1.GeoLocationsResponse} returns this
 */
proto.geo.v1.GeoLocationsResponse.prototype.clearLocationsList = function () {
  return this.setLocationsList([])
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.geo.v1.DeleteGeoLocationRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.geo.v1.DeleteGeoLocationRequest.toObject(
      opt_includeInstance,
      this
    )
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.geo.v1.DeleteGeoLocationRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.geo.v1.DeleteGeoLocationRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ''),
        hash: jspb.Message.getFieldWithDefault(msg, 2, ''),
        longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
        latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geo.v1.DeleteGeoLocationRequest}
 */
proto.geo.v1.DeleteGeoLocationRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.geo.v1.DeleteGeoLocationRequest()
  return proto.geo.v1.DeleteGeoLocationRequest.deserializeBinaryFromReader(
    msg,
    reader
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geo.v1.DeleteGeoLocationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geo.v1.DeleteGeoLocationRequest}
 */
proto.geo.v1.DeleteGeoLocationRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setId(value)
        break
      case 2:
        var value = /** @type {string} */ (reader.readString())
        msg.setHash(value)
        break
      case 3:
        var value = /** @type {number} */ (reader.readFloat())
        msg.setLongitude(value)
        break
      case 4:
        var value = /** @type {number} */ (reader.readFloat())
        msg.setLatitude(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geo.v1.DeleteGeoLocationRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.geo.v1.DeleteGeoLocationRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geo.v1.DeleteGeoLocationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geo.v1.DeleteGeoLocationRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getId()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getHash()
  if (f.length > 0) {
    writer.writeString(2, f)
  }
  f = message.getLongitude()
  if (f !== 0.0) {
    writer.writeFloat(3, f)
  }
  f = message.getLatitude()
  if (f !== 0.0) {
    writer.writeFloat(4, f)
  }
}

/**
 * optional string id = 1;
 * @return {string}
 */
proto.geo.v1.DeleteGeoLocationRequest.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.DeleteGeoLocationRequest} returns this
 */
proto.geo.v1.DeleteGeoLocationRequest.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * optional string hash = 2;
 * @return {string}
 */
proto.geo.v1.DeleteGeoLocationRequest.prototype.getHash = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.DeleteGeoLocationRequest} returns this
 */
proto.geo.v1.DeleteGeoLocationRequest.prototype.setHash = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value)
}

/**
 * optional float longitude = 3;
 * @return {number}
 */
proto.geo.v1.DeleteGeoLocationRequest.prototype.getLongitude = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0)
  )
}

/**
 * @param {number} value
 * @return {!proto.geo.v1.DeleteGeoLocationRequest} returns this
 */
proto.geo.v1.DeleteGeoLocationRequest.prototype.setLongitude = function (
  value
) {
  return jspb.Message.setProto3FloatField(this, 3, value)
}

/**
 * optional float latitude = 4;
 * @return {number}
 */
proto.geo.v1.DeleteGeoLocationRequest.prototype.getLatitude = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0)
  )
}

/**
 * @param {number} value
 * @return {!proto.geo.v1.DeleteGeoLocationRequest} returns this
 */
proto.geo.v1.DeleteGeoLocationRequest.prototype.setLatitude = function (value) {
  return jspb.Message.setProto3FloatField(this, 4, value)
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.geo.v1.DeleteResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.geo.v1.DeleteResponse.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.geo.v1.DeleteResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.geo.v1.DeleteResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        ok: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geo.v1.DeleteResponse}
 */
proto.geo.v1.DeleteResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.geo.v1.DeleteResponse()
  return proto.geo.v1.DeleteResponse.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geo.v1.DeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geo.v1.DeleteResponse}
 */
proto.geo.v1.DeleteResponse.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool())
        msg.setOk(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geo.v1.DeleteResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.geo.v1.DeleteResponse.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geo.v1.DeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geo.v1.DeleteResponse.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getOk()
  if (f) {
    writer.writeBool(1, f)
  }
}

/**
 * optional bool ok = 1;
 * @return {boolean}
 */
proto.geo.v1.DeleteResponse.prototype.getOk = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  )
}

/**
 * @param {boolean} value
 * @return {!proto.geo.v1.DeleteResponse} returns this
 */
proto.geo.v1.DeleteResponse.prototype.setOk = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value)
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.geo.v1.Address.prototype.toObject = function (opt_includeInstance) {
    return proto.geo.v1.Address.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.geo.v1.Address} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.geo.v1.Address.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ''),
        refid: jspb.Message.getFieldWithDefault(msg, 2, ''),
        type: jspb.Message.getFieldWithDefault(msg, 3, 0),
        street: jspb.Message.getFieldWithDefault(msg, 4, ''),
        city: jspb.Message.getFieldWithDefault(msg, 5, ''),
        postalcode: jspb.Message.getFieldWithDefault(msg, 6, ''),
        state: jspb.Message.getFieldWithDefault(msg, 7, ''),
        country: jspb.Message.getFieldWithDefault(msg, 8, '')
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geo.v1.Address}
 */
proto.geo.v1.Address.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.geo.v1.Address()
  return proto.geo.v1.Address.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geo.v1.Address} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geo.v1.Address}
 */
proto.geo.v1.Address.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setId(value)
        break
      case 2:
        var value = /** @type {string} */ (reader.readString())
        msg.setRefid(value)
        break
      case 3:
        var value = /** @type {!proto.geo.v1.AddressType} */ (reader.readEnum())
        msg.setType(value)
        break
      case 4:
        var value = /** @type {string} */ (reader.readString())
        msg.setStreet(value)
        break
      case 5:
        var value = /** @type {string} */ (reader.readString())
        msg.setCity(value)
        break
      case 6:
        var value = /** @type {string} */ (reader.readString())
        msg.setPostalcode(value)
        break
      case 7:
        var value = /** @type {string} */ (reader.readString())
        msg.setState(value)
        break
      case 8:
        var value = /** @type {string} */ (reader.readString())
        msg.setCountry(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geo.v1.Address.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.geo.v1.Address.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geo.v1.Address} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geo.v1.Address.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getId()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getRefid()
  if (f.length > 0) {
    writer.writeString(2, f)
  }
  f = message.getType()
  if (f !== 0.0) {
    writer.writeEnum(3, f)
  }
  f = message.getStreet()
  if (f.length > 0) {
    writer.writeString(4, f)
  }
  f = message.getCity()
  if (f.length > 0) {
    writer.writeString(5, f)
  }
  f = message.getPostalcode()
  if (f.length > 0) {
    writer.writeString(6, f)
  }
  f = message.getState()
  if (f.length > 0) {
    writer.writeString(7, f)
  }
  f = message.getCountry()
  if (f.length > 0) {
    writer.writeString(8, f)
  }
}

/**
 * optional string id = 1;
 * @return {string}
 */
proto.geo.v1.Address.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.Address} returns this
 */
proto.geo.v1.Address.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * optional string refId = 2;
 * @return {string}
 */
proto.geo.v1.Address.prototype.getRefid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.Address} returns this
 */
proto.geo.v1.Address.prototype.setRefid = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value)
}

/**
 * optional AddressType type = 3;
 * @return {!proto.geo.v1.AddressType}
 */
proto.geo.v1.Address.prototype.getType = function () {
  return /** @type {!proto.geo.v1.AddressType} */ (
    jspb.Message.getFieldWithDefault(this, 3, 0)
  )
}

/**
 * @param {!proto.geo.v1.AddressType} value
 * @return {!proto.geo.v1.Address} returns this
 */
proto.geo.v1.Address.prototype.setType = function (value) {
  return jspb.Message.setProto3EnumField(this, 3, value)
}

/**
 * optional string street = 4;
 * @return {string}
 */
proto.geo.v1.Address.prototype.getStreet = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.Address} returns this
 */
proto.geo.v1.Address.prototype.setStreet = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value)
}

/**
 * optional string city = 5;
 * @return {string}
 */
proto.geo.v1.Address.prototype.getCity = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.Address} returns this
 */
proto.geo.v1.Address.prototype.setCity = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value)
}

/**
 * optional string postalCode = 6;
 * @return {string}
 */
proto.geo.v1.Address.prototype.getPostalcode = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.Address} returns this
 */
proto.geo.v1.Address.prototype.setPostalcode = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value)
}

/**
 * optional string state = 7;
 * @return {string}
 */
proto.geo.v1.Address.prototype.getState = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.Address} returns this
 */
proto.geo.v1.Address.prototype.setState = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value)
}

/**
 * optional string country = 8;
 * @return {string}
 */
proto.geo.v1.Address.prototype.getCountry = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.Address} returns this
 */
proto.geo.v1.Address.prototype.setCountry = function (value) {
  return jspb.Message.setProto3StringField(this, 8, value)
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.geo.v1.AddressTypesRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.geo.v1.AddressTypesRequest.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.geo.v1.AddressTypesRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.geo.v1.AddressTypesRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {}

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geo.v1.AddressTypesRequest}
 */
proto.geo.v1.AddressTypesRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.geo.v1.AddressTypesRequest()
  return proto.geo.v1.AddressTypesRequest.deserializeBinaryFromReader(
    msg,
    reader
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geo.v1.AddressTypesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geo.v1.AddressTypesRequest}
 */
proto.geo.v1.AddressTypesRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geo.v1.AddressTypesRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.geo.v1.AddressTypesRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geo.v1.AddressTypesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geo.v1.AddressTypesRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.geo.v1.AddressTypesResponse.repeatedFields_ = [1]

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.geo.v1.AddressTypesResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.geo.v1.AddressTypesResponse.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.geo.v1.AddressTypesResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.geo.v1.AddressTypesResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        addresstypesList:
          (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geo.v1.AddressTypesResponse}
 */
proto.geo.v1.AddressTypesResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.geo.v1.AddressTypesResponse()
  return proto.geo.v1.AddressTypesResponse.deserializeBinaryFromReader(
    msg,
    reader
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geo.v1.AddressTypesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geo.v1.AddressTypesResponse}
 */
proto.geo.v1.AddressTypesResponse.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var values = /** @type {!Array<!proto.geo.v1.AddressType>} */ (
          reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]
        )
        for (var i = 0; i < values.length; i++) {
          msg.addAddresstypes(values[i])
        }
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geo.v1.AddressTypesResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.geo.v1.AddressTypesResponse.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geo.v1.AddressTypesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geo.v1.AddressTypesResponse.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getAddresstypesList()
  if (f.length > 0) {
    writer.writePackedEnum(1, f)
  }
}

/**
 * repeated AddressType addressTypes = 1;
 * @return {!Array<!proto.geo.v1.AddressType>}
 */
proto.geo.v1.AddressTypesResponse.prototype.getAddresstypesList = function () {
  return /** @type {!Array<!proto.geo.v1.AddressType>} */ (
    jspb.Message.getRepeatedField(this, 1)
  )
}

/**
 * @param {!Array<!proto.geo.v1.AddressType>} value
 * @return {!proto.geo.v1.AddressTypesResponse} returns this
 */
proto.geo.v1.AddressTypesResponse.prototype.setAddresstypesList = function (
  value
) {
  return jspb.Message.setField(this, 1, value || [])
}

/**
 * @param {!proto.geo.v1.AddressType} value
 * @param {number=} opt_index
 * @return {!proto.geo.v1.AddressTypesResponse} returns this
 */
proto.geo.v1.AddressTypesResponse.prototype.addAddresstypes = function (
  value,
  opt_index
) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index)
}

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.geo.v1.AddressTypesResponse} returns this
 */
proto.geo.v1.AddressTypesResponse.prototype.clearAddresstypesList =
  function () {
    return this.setAddresstypesList([])
  }

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.geo.v1.AddressRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.geo.v1.AddressRequest.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.geo.v1.AddressRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.geo.v1.AddressRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        refid: jspb.Message.getFieldWithDefault(msg, 1, ''),
        type: jspb.Message.getFieldWithDefault(msg, 2, 0),
        street: jspb.Message.getFieldWithDefault(msg, 3, ''),
        city: jspb.Message.getFieldWithDefault(msg, 4, ''),
        postalcode: jspb.Message.getFieldWithDefault(msg, 5, ''),
        state: jspb.Message.getFieldWithDefault(msg, 6, ''),
        country: jspb.Message.getFieldWithDefault(msg, 7, ''),
        requestedby: jspb.Message.getFieldWithDefault(msg, 8, '')
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geo.v1.AddressRequest}
 */
proto.geo.v1.AddressRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.geo.v1.AddressRequest()
  return proto.geo.v1.AddressRequest.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geo.v1.AddressRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geo.v1.AddressRequest}
 */
proto.geo.v1.AddressRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setRefid(value)
        break
      case 2:
        var value = /** @type {!proto.geo.v1.AddressType} */ (reader.readEnum())
        msg.setType(value)
        break
      case 3:
        var value = /** @type {string} */ (reader.readString())
        msg.setStreet(value)
        break
      case 4:
        var value = /** @type {string} */ (reader.readString())
        msg.setCity(value)
        break
      case 5:
        var value = /** @type {string} */ (reader.readString())
        msg.setPostalcode(value)
        break
      case 6:
        var value = /** @type {string} */ (reader.readString())
        msg.setState(value)
        break
      case 7:
        var value = /** @type {string} */ (reader.readString())
        msg.setCountry(value)
        break
      case 8:
        var value = /** @type {string} */ (reader.readString())
        msg.setRequestedby(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geo.v1.AddressRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.geo.v1.AddressRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geo.v1.AddressRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geo.v1.AddressRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getRefid()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getType()
  if (f !== 0.0) {
    writer.writeEnum(2, f)
  }
  f = message.getStreet()
  if (f.length > 0) {
    writer.writeString(3, f)
  }
  f = message.getCity()
  if (f.length > 0) {
    writer.writeString(4, f)
  }
  f = message.getPostalcode()
  if (f.length > 0) {
    writer.writeString(5, f)
  }
  f = message.getState()
  if (f.length > 0) {
    writer.writeString(6, f)
  }
  f = message.getCountry()
  if (f.length > 0) {
    writer.writeString(7, f)
  }
  f = message.getRequestedby()
  if (f.length > 0) {
    writer.writeString(8, f)
  }
}

/**
 * optional string refId = 1;
 * @return {string}
 */
proto.geo.v1.AddressRequest.prototype.getRefid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.AddressRequest} returns this
 */
proto.geo.v1.AddressRequest.prototype.setRefid = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * optional AddressType type = 2;
 * @return {!proto.geo.v1.AddressType}
 */
proto.geo.v1.AddressRequest.prototype.getType = function () {
  return /** @type {!proto.geo.v1.AddressType} */ (
    jspb.Message.getFieldWithDefault(this, 2, 0)
  )
}

/**
 * @param {!proto.geo.v1.AddressType} value
 * @return {!proto.geo.v1.AddressRequest} returns this
 */
proto.geo.v1.AddressRequest.prototype.setType = function (value) {
  return jspb.Message.setProto3EnumField(this, 2, value)
}

/**
 * optional string street = 3;
 * @return {string}
 */
proto.geo.v1.AddressRequest.prototype.getStreet = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.AddressRequest} returns this
 */
proto.geo.v1.AddressRequest.prototype.setStreet = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value)
}

/**
 * optional string city = 4;
 * @return {string}
 */
proto.geo.v1.AddressRequest.prototype.getCity = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.AddressRequest} returns this
 */
proto.geo.v1.AddressRequest.prototype.setCity = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value)
}

/**
 * optional string postalCode = 5;
 * @return {string}
 */
proto.geo.v1.AddressRequest.prototype.getPostalcode = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.AddressRequest} returns this
 */
proto.geo.v1.AddressRequest.prototype.setPostalcode = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value)
}

/**
 * optional string state = 6;
 * @return {string}
 */
proto.geo.v1.AddressRequest.prototype.getState = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.AddressRequest} returns this
 */
proto.geo.v1.AddressRequest.prototype.setState = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value)
}

/**
 * optional string country = 7;
 * @return {string}
 */
proto.geo.v1.AddressRequest.prototype.getCountry = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.AddressRequest} returns this
 */
proto.geo.v1.AddressRequest.prototype.setCountry = function (value) {
  return jspb.Message.setProto3StringField(this, 7, value)
}

/**
 * optional string requestedBy = 8;
 * @return {string}
 */
proto.geo.v1.AddressRequest.prototype.getRequestedby = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.AddressRequest} returns this
 */
proto.geo.v1.AddressRequest.prototype.setRequestedby = function (value) {
  return jspb.Message.setProto3StringField(this, 8, value)
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.geo.v1.GetAddressRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.geo.v1.GetAddressRequest.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.geo.v1.GetAddressRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.geo.v1.GetAddressRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, '')
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geo.v1.GetAddressRequest}
 */
proto.geo.v1.GetAddressRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.geo.v1.GetAddressRequest()
  return proto.geo.v1.GetAddressRequest.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geo.v1.GetAddressRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geo.v1.GetAddressRequest}
 */
proto.geo.v1.GetAddressRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setId(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geo.v1.GetAddressRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.geo.v1.GetAddressRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geo.v1.GetAddressRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geo.v1.GetAddressRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getId()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
}

/**
 * optional string id = 1;
 * @return {string}
 */
proto.geo.v1.GetAddressRequest.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.GetAddressRequest} returns this
 */
proto.geo.v1.GetAddressRequest.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.geo.v1.GetAddressesRequest.repeatedFields_ = [2]

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.geo.v1.GetAddressesRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.geo.v1.GetAddressesRequest.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.geo.v1.GetAddressesRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.geo.v1.GetAddressesRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        refid: jspb.Message.getFieldWithDefault(msg, 1, ''),
        addressidsList:
          (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
        type: jspb.Message.getFieldWithDefault(msg, 3, 0)
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geo.v1.GetAddressesRequest}
 */
proto.geo.v1.GetAddressesRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.geo.v1.GetAddressesRequest()
  return proto.geo.v1.GetAddressesRequest.deserializeBinaryFromReader(
    msg,
    reader
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geo.v1.GetAddressesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geo.v1.GetAddressesRequest}
 */
proto.geo.v1.GetAddressesRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setRefid(value)
        break
      case 2:
        var value = /** @type {string} */ (reader.readString())
        msg.addAddressids(value)
        break
      case 3:
        var value = /** @type {!proto.geo.v1.AddressType} */ (reader.readEnum())
        msg.setType(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geo.v1.GetAddressesRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.geo.v1.GetAddressesRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geo.v1.GetAddressesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geo.v1.GetAddressesRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getRefid()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getAddressidsList()
  if (f.length > 0) {
    writer.writeRepeatedString(2, f)
  }
  f = message.getType()
  if (f !== 0.0) {
    writer.writeEnum(3, f)
  }
}

/**
 * optional string refId = 1;
 * @return {string}
 */
proto.geo.v1.GetAddressesRequest.prototype.getRefid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.GetAddressesRequest} returns this
 */
proto.geo.v1.GetAddressesRequest.prototype.setRefid = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * repeated string addressIds = 2;
 * @return {!Array<string>}
 */
proto.geo.v1.GetAddressesRequest.prototype.getAddressidsList = function () {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2))
}

/**
 * @param {!Array<string>} value
 * @return {!proto.geo.v1.GetAddressesRequest} returns this
 */
proto.geo.v1.GetAddressesRequest.prototype.setAddressidsList = function (
  value
) {
  return jspb.Message.setField(this, 2, value || [])
}

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.geo.v1.GetAddressesRequest} returns this
 */
proto.geo.v1.GetAddressesRequest.prototype.addAddressids = function (
  value,
  opt_index
) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index)
}

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.geo.v1.GetAddressesRequest} returns this
 */
proto.geo.v1.GetAddressesRequest.prototype.clearAddressidsList = function () {
  return this.setAddressidsList([])
}

/**
 * optional AddressType type = 3;
 * @return {!proto.geo.v1.AddressType}
 */
proto.geo.v1.GetAddressesRequest.prototype.getType = function () {
  return /** @type {!proto.geo.v1.AddressType} */ (
    jspb.Message.getFieldWithDefault(this, 3, 0)
  )
}

/**
 * @param {!proto.geo.v1.AddressType} value
 * @return {!proto.geo.v1.GetAddressesRequest} returns this
 */
proto.geo.v1.GetAddressesRequest.prototype.setType = function (value) {
  return jspb.Message.setProto3EnumField(this, 3, value)
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.geo.v1.AddressResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.geo.v1.AddressResponse.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.geo.v1.AddressResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.geo.v1.AddressResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        ok: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        address:
          (f = msg.getAddress()) &&
          proto.geo.v1.Address.toObject(includeInstance, f)
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geo.v1.AddressResponse}
 */
proto.geo.v1.AddressResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.geo.v1.AddressResponse()
  return proto.geo.v1.AddressResponse.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geo.v1.AddressResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geo.v1.AddressResponse}
 */
proto.geo.v1.AddressResponse.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool())
        msg.setOk(value)
        break
      case 2:
        var value = new proto.geo.v1.Address()
        reader.readMessage(
          value,
          proto.geo.v1.Address.deserializeBinaryFromReader
        )
        msg.setAddress(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geo.v1.AddressResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.geo.v1.AddressResponse.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geo.v1.AddressResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geo.v1.AddressResponse.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getOk()
  if (f) {
    writer.writeBool(1, f)
  }
  f = message.getAddress()
  if (f != null) {
    writer.writeMessage(2, f, proto.geo.v1.Address.serializeBinaryToWriter)
  }
}

/**
 * optional bool ok = 1;
 * @return {boolean}
 */
proto.geo.v1.AddressResponse.prototype.getOk = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  )
}

/**
 * @param {boolean} value
 * @return {!proto.geo.v1.AddressResponse} returns this
 */
proto.geo.v1.AddressResponse.prototype.setOk = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value)
}

/**
 * optional Address address = 2;
 * @return {?proto.geo.v1.Address}
 */
proto.geo.v1.AddressResponse.prototype.getAddress = function () {
  return /** @type{?proto.geo.v1.Address} */ (
    jspb.Message.getWrapperField(this, proto.geo.v1.Address, 2)
  )
}

/**
 * @param {?proto.geo.v1.Address|undefined} value
 * @return {!proto.geo.v1.AddressResponse} returns this
 */
proto.geo.v1.AddressResponse.prototype.setAddress = function (value) {
  return jspb.Message.setWrapperField(this, 2, value)
}

/**
 * Clears the message field making it undefined.
 * @return {!proto.geo.v1.AddressResponse} returns this
 */
proto.geo.v1.AddressResponse.prototype.clearAddress = function () {
  return this.setAddress(undefined)
}

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.geo.v1.AddressResponse.prototype.hasAddress = function () {
  return jspb.Message.getField(this, 2) != null
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.geo.v1.AddressesResponse.repeatedFields_ = [2]

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.geo.v1.AddressesResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.geo.v1.AddressesResponse.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.geo.v1.AddressesResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.geo.v1.AddressesResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        ok: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        addressesList: jspb.Message.toObjectList(
          msg.getAddressesList(),
          proto.geo.v1.Address.toObject,
          includeInstance
        )
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geo.v1.AddressesResponse}
 */
proto.geo.v1.AddressesResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.geo.v1.AddressesResponse()
  return proto.geo.v1.AddressesResponse.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geo.v1.AddressesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geo.v1.AddressesResponse}
 */
proto.geo.v1.AddressesResponse.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool())
        msg.setOk(value)
        break
      case 2:
        var value = new proto.geo.v1.Address()
        reader.readMessage(
          value,
          proto.geo.v1.Address.deserializeBinaryFromReader
        )
        msg.addAddresses(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geo.v1.AddressesResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.geo.v1.AddressesResponse.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geo.v1.AddressesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geo.v1.AddressesResponse.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getOk()
  if (f) {
    writer.writeBool(1, f)
  }
  f = message.getAddressesList()
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.geo.v1.Address.serializeBinaryToWriter
    )
  }
}

/**
 * optional bool ok = 1;
 * @return {boolean}
 */
proto.geo.v1.AddressesResponse.prototype.getOk = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  )
}

/**
 * @param {boolean} value
 * @return {!proto.geo.v1.AddressesResponse} returns this
 */
proto.geo.v1.AddressesResponse.prototype.setOk = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value)
}

/**
 * repeated Address addresses = 2;
 * @return {!Array<!proto.geo.v1.Address>}
 */
proto.geo.v1.AddressesResponse.prototype.getAddressesList = function () {
  return /** @type{!Array<!proto.geo.v1.Address>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.geo.v1.Address, 2)
  )
}

/**
 * @param {!Array<!proto.geo.v1.Address>} value
 * @return {!proto.geo.v1.AddressesResponse} returns this
 */
proto.geo.v1.AddressesResponse.prototype.setAddressesList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value)
}

/**
 * @param {!proto.geo.v1.Address=} opt_value
 * @param {number=} opt_index
 * @return {!proto.geo.v1.Address}
 */
proto.geo.v1.AddressesResponse.prototype.addAddresses = function (
  opt_value,
  opt_index
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    2,
    opt_value,
    proto.geo.v1.Address,
    opt_index
  )
}

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.geo.v1.AddressesResponse} returns this
 */
proto.geo.v1.AddressesResponse.prototype.clearAddressesList = function () {
  return this.setAddressesList([])
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.geo.v1.DeleteAddressRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.geo.v1.DeleteAddressRequest.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.geo.v1.DeleteAddressRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.geo.v1.DeleteAddressRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, ''),
        refid: jspb.Message.getFieldWithDefault(msg, 2, '')
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geo.v1.DeleteAddressRequest}
 */
proto.geo.v1.DeleteAddressRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.geo.v1.DeleteAddressRequest()
  return proto.geo.v1.DeleteAddressRequest.deserializeBinaryFromReader(
    msg,
    reader
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geo.v1.DeleteAddressRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geo.v1.DeleteAddressRequest}
 */
proto.geo.v1.DeleteAddressRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setId(value)
        break
      case 2:
        var value = /** @type {string} */ (reader.readString())
        msg.setRefid(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geo.v1.DeleteAddressRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.geo.v1.DeleteAddressRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geo.v1.DeleteAddressRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geo.v1.DeleteAddressRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getId()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getRefid()
  if (f.length > 0) {
    writer.writeString(2, f)
  }
}

/**
 * optional string id = 1;
 * @return {string}
 */
proto.geo.v1.DeleteAddressRequest.prototype.getId = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.DeleteAddressRequest} returns this
 */
proto.geo.v1.DeleteAddressRequest.prototype.setId = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * optional string refId = 2;
 * @return {string}
 */
proto.geo.v1.DeleteAddressRequest.prototype.getRefid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.DeleteAddressRequest} returns this
 */
proto.geo.v1.DeleteAddressRequest.prototype.setRefid = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value)
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.geo.v1.RouteLeg.prototype.toObject = function (opt_includeInstance) {
    return proto.geo.v1.RouteLeg.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.geo.v1.RouteLeg} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.geo.v1.RouteLeg.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        start: jspb.Message.getFieldWithDefault(msg, 1, ''),
        end: jspb.Message.getFieldWithDefault(msg, 2, ''),
        duration: jspb.Message.getFieldWithDefault(msg, 3, 0),
        distance: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
        startid: jspb.Message.getFieldWithDefault(msg, 5, ''),
        endid: jspb.Message.getFieldWithDefault(msg, 6, '')
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geo.v1.RouteLeg}
 */
proto.geo.v1.RouteLeg.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.geo.v1.RouteLeg()
  return proto.geo.v1.RouteLeg.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geo.v1.RouteLeg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geo.v1.RouteLeg}
 */
proto.geo.v1.RouteLeg.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.setStart(value)
        break
      case 2:
        var value = /** @type {string} */ (reader.readString())
        msg.setEnd(value)
        break
      case 3:
        var value = /** @type {number} */ (reader.readInt64())
        msg.setDuration(value)
        break
      case 4:
        var value = /** @type {number} */ (reader.readFloat())
        msg.setDistance(value)
        break
      case 5:
        var value = /** @type {string} */ (reader.readString())
        msg.setStartid(value)
        break
      case 6:
        var value = /** @type {string} */ (reader.readString())
        msg.setEndid(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geo.v1.RouteLeg.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.geo.v1.RouteLeg.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geo.v1.RouteLeg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geo.v1.RouteLeg.serializeBinaryToWriter = function (message, writer) {
  var f = undefined
  f = message.getStart()
  if (f.length > 0) {
    writer.writeString(1, f)
  }
  f = message.getEnd()
  if (f.length > 0) {
    writer.writeString(2, f)
  }
  f = message.getDuration()
  if (f !== 0) {
    writer.writeInt64(3, f)
  }
  f = message.getDistance()
  if (f !== 0.0) {
    writer.writeFloat(4, f)
  }
  f = message.getStartid()
  if (f.length > 0) {
    writer.writeString(5, f)
  }
  f = message.getEndid()
  if (f.length > 0) {
    writer.writeString(6, f)
  }
}

/**
 * optional string start = 1;
 * @return {string}
 */
proto.geo.v1.RouteLeg.prototype.getStart = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.RouteLeg} returns this
 */
proto.geo.v1.RouteLeg.prototype.setStart = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value)
}

/**
 * optional string end = 2;
 * @return {string}
 */
proto.geo.v1.RouteLeg.prototype.getEnd = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.RouteLeg} returns this
 */
proto.geo.v1.RouteLeg.prototype.setEnd = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value)
}

/**
 * optional int64 duration = 3;
 * @return {number}
 */
proto.geo.v1.RouteLeg.prototype.getDuration = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0))
}

/**
 * @param {number} value
 * @return {!proto.geo.v1.RouteLeg} returns this
 */
proto.geo.v1.RouteLeg.prototype.setDuration = function (value) {
  return jspb.Message.setProto3IntField(this, 3, value)
}

/**
 * optional float distance = 4;
 * @return {number}
 */
proto.geo.v1.RouteLeg.prototype.getDistance = function () {
  return /** @type {number} */ (
    jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0)
  )
}

/**
 * @param {number} value
 * @return {!proto.geo.v1.RouteLeg} returns this
 */
proto.geo.v1.RouteLeg.prototype.setDistance = function (value) {
  return jspb.Message.setProto3FloatField(this, 4, value)
}

/**
 * optional string startId = 5;
 * @return {string}
 */
proto.geo.v1.RouteLeg.prototype.getStartid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.RouteLeg} returns this
 */
proto.geo.v1.RouteLeg.prototype.setStartid = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value)
}

/**
 * optional string endId = 6;
 * @return {string}
 */
proto.geo.v1.RouteLeg.prototype.getEndid = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ''))
}

/**
 * @param {string} value
 * @return {!proto.geo.v1.RouteLeg} returns this
 */
proto.geo.v1.RouteLeg.prototype.setEndid = function (value) {
  return jspb.Message.setProto3StringField(this, 6, value)
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.geo.v1.GeoRouteRequest.repeatedFields_ = [1, 2]

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.geo.v1.GeoRouteRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.geo.v1.GeoRouteRequest.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.geo.v1.GeoRouteRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.geo.v1.GeoRouteRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        originsList: jspb.Message.toObjectList(
          msg.getOriginsList(),
          proto.geo.v1.GeoRequest.toObject,
          includeInstance
        ),
        destinationsList: jspb.Message.toObjectList(
          msg.getDestinationsList(),
          proto.geo.v1.GeoRequest.toObject,
          includeInstance
        ),
        islatlng: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geo.v1.GeoRouteRequest}
 */
proto.geo.v1.GeoRouteRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.geo.v1.GeoRouteRequest()
  return proto.geo.v1.GeoRouteRequest.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geo.v1.GeoRouteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geo.v1.GeoRouteRequest}
 */
proto.geo.v1.GeoRouteRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = new proto.geo.v1.GeoRequest()
        reader.readMessage(
          value,
          proto.geo.v1.GeoRequest.deserializeBinaryFromReader
        )
        msg.addOrigins(value)
        break
      case 2:
        var value = new proto.geo.v1.GeoRequest()
        reader.readMessage(
          value,
          proto.geo.v1.GeoRequest.deserializeBinaryFromReader
        )
        msg.addDestinations(value)
        break
      case 3:
        var value = /** @type {boolean} */ (reader.readBool())
        msg.setIslatlng(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geo.v1.GeoRouteRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.geo.v1.GeoRouteRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geo.v1.GeoRouteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geo.v1.GeoRouteRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getOriginsList()
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.geo.v1.GeoRequest.serializeBinaryToWriter
    )
  }
  f = message.getDestinationsList()
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.geo.v1.GeoRequest.serializeBinaryToWriter
    )
  }
  f = message.getIslatlng()
  if (f) {
    writer.writeBool(3, f)
  }
}

/**
 * repeated GeoRequest origins = 1;
 * @return {!Array<!proto.geo.v1.GeoRequest>}
 */
proto.geo.v1.GeoRouteRequest.prototype.getOriginsList = function () {
  return /** @type{!Array<!proto.geo.v1.GeoRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.geo.v1.GeoRequest, 1)
  )
}

/**
 * @param {!Array<!proto.geo.v1.GeoRequest>} value
 * @return {!proto.geo.v1.GeoRouteRequest} returns this
 */
proto.geo.v1.GeoRouteRequest.prototype.setOriginsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value)
}

/**
 * @param {!proto.geo.v1.GeoRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.geo.v1.GeoRequest}
 */
proto.geo.v1.GeoRouteRequest.prototype.addOrigins = function (
  opt_value,
  opt_index
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    1,
    opt_value,
    proto.geo.v1.GeoRequest,
    opt_index
  )
}

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.geo.v1.GeoRouteRequest} returns this
 */
proto.geo.v1.GeoRouteRequest.prototype.clearOriginsList = function () {
  return this.setOriginsList([])
}

/**
 * repeated GeoRequest destinations = 2;
 * @return {!Array<!proto.geo.v1.GeoRequest>}
 */
proto.geo.v1.GeoRouteRequest.prototype.getDestinationsList = function () {
  return /** @type{!Array<!proto.geo.v1.GeoRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.geo.v1.GeoRequest, 2)
  )
}

/**
 * @param {!Array<!proto.geo.v1.GeoRequest>} value
 * @return {!proto.geo.v1.GeoRouteRequest} returns this
 */
proto.geo.v1.GeoRouteRequest.prototype.setDestinationsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value)
}

/**
 * @param {!proto.geo.v1.GeoRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.geo.v1.GeoRequest}
 */
proto.geo.v1.GeoRouteRequest.prototype.addDestinations = function (
  opt_value,
  opt_index
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    2,
    opt_value,
    proto.geo.v1.GeoRequest,
    opt_index
  )
}

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.geo.v1.GeoRouteRequest} returns this
 */
proto.geo.v1.GeoRouteRequest.prototype.clearDestinationsList = function () {
  return this.setDestinationsList([])
}

/**
 * optional bool isLatLng = 3;
 * @return {boolean}
 */
proto.geo.v1.GeoRouteRequest.prototype.getIslatlng = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 3, false)
  )
}

/**
 * @param {boolean} value
 * @return {!proto.geo.v1.GeoRouteRequest} returns this
 */
proto.geo.v1.GeoRouteRequest.prototype.setIslatlng = function (value) {
  return jspb.Message.setProto3BooleanField(this, 3, value)
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.geo.v1.AddressRouteRequest.repeatedFields_ = [1, 2]

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.geo.v1.AddressRouteRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.geo.v1.AddressRouteRequest.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.geo.v1.AddressRouteRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.geo.v1.AddressRouteRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        originsList:
          (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
        destinationsList:
          (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geo.v1.AddressRouteRequest}
 */
proto.geo.v1.AddressRouteRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.geo.v1.AddressRouteRequest()
  return proto.geo.v1.AddressRouteRequest.deserializeBinaryFromReader(
    msg,
    reader
  )
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geo.v1.AddressRouteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geo.v1.AddressRouteRequest}
 */
proto.geo.v1.AddressRouteRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString())
        msg.addOrigins(value)
        break
      case 2:
        var value = /** @type {string} */ (reader.readString())
        msg.addDestinations(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geo.v1.AddressRouteRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.geo.v1.AddressRouteRequest.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geo.v1.AddressRouteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geo.v1.AddressRouteRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getOriginsList()
  if (f.length > 0) {
    writer.writeRepeatedString(1, f)
  }
  f = message.getDestinationsList()
  if (f.length > 0) {
    writer.writeRepeatedString(2, f)
  }
}

/**
 * repeated string origins = 1;
 * @return {!Array<string>}
 */
proto.geo.v1.AddressRouteRequest.prototype.getOriginsList = function () {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1))
}

/**
 * @param {!Array<string>} value
 * @return {!proto.geo.v1.AddressRouteRequest} returns this
 */
proto.geo.v1.AddressRouteRequest.prototype.setOriginsList = function (value) {
  return jspb.Message.setField(this, 1, value || [])
}

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.geo.v1.AddressRouteRequest} returns this
 */
proto.geo.v1.AddressRouteRequest.prototype.addOrigins = function (
  value,
  opt_index
) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index)
}

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.geo.v1.AddressRouteRequest} returns this
 */
proto.geo.v1.AddressRouteRequest.prototype.clearOriginsList = function () {
  return this.setOriginsList([])
}

/**
 * repeated string destinations = 2;
 * @return {!Array<string>}
 */
proto.geo.v1.AddressRouteRequest.prototype.getDestinationsList = function () {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2))
}

/**
 * @param {!Array<string>} value
 * @return {!proto.geo.v1.AddressRouteRequest} returns this
 */
proto.geo.v1.AddressRouteRequest.prototype.setDestinationsList = function (
  value
) {
  return jspb.Message.setField(this, 2, value || [])
}

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.geo.v1.AddressRouteRequest} returns this
 */
proto.geo.v1.AddressRouteRequest.prototype.addDestinations = function (
  value,
  opt_index
) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index)
}

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.geo.v1.AddressRouteRequest} returns this
 */
proto.geo.v1.AddressRouteRequest.prototype.clearDestinationsList = function () {
  return this.setDestinationsList([])
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.geo.v1.RouteResponse.repeatedFields_ = [2]

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.geo.v1.RouteResponse.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.geo.v1.RouteResponse.toObject(opt_includeInstance, this)
  }

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.geo.v1.RouteResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.geo.v1.RouteResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        ok: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
        routelegsList: jspb.Message.toObjectList(
          msg.getRoutelegsList(),
          proto.geo.v1.RouteLeg.toObject,
          includeInstance
        )
      }

    if (includeInstance) {
      obj.$jspbMessageInstance = msg
    }
    return obj
  }
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.geo.v1.RouteResponse}
 */
proto.geo.v1.RouteResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes)
  var msg = new proto.geo.v1.RouteResponse()
  return proto.geo.v1.RouteResponse.deserializeBinaryFromReader(msg, reader)
}

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.geo.v1.RouteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.geo.v1.RouteResponse}
 */
proto.geo.v1.RouteResponse.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break
    }
    var field = reader.getFieldNumber()
    switch (field) {
      case 1:
        var value = /** @type {boolean} */ (reader.readBool())
        msg.setOk(value)
        break
      case 2:
        var value = new proto.geo.v1.RouteLeg()
        reader.readMessage(
          value,
          proto.geo.v1.RouteLeg.deserializeBinaryFromReader
        )
        msg.addRoutelegs(value)
        break
      default:
        reader.skipField()
        break
    }
  }
  return msg
}

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.geo.v1.RouteResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter()
  proto.geo.v1.RouteResponse.serializeBinaryToWriter(this, writer)
  return writer.getResultBuffer()
}

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.geo.v1.RouteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.geo.v1.RouteResponse.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined
  f = message.getOk()
  if (f) {
    writer.writeBool(1, f)
  }
  f = message.getRoutelegsList()
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.geo.v1.RouteLeg.serializeBinaryToWriter
    )
  }
}

/**
 * optional bool ok = 1;
 * @return {boolean}
 */
proto.geo.v1.RouteResponse.prototype.getOk = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 1, false)
  )
}

/**
 * @param {boolean} value
 * @return {!proto.geo.v1.RouteResponse} returns this
 */
proto.geo.v1.RouteResponse.prototype.setOk = function (value) {
  return jspb.Message.setProto3BooleanField(this, 1, value)
}

/**
 * repeated RouteLeg routeLegs = 2;
 * @return {!Array<!proto.geo.v1.RouteLeg>}
 */
proto.geo.v1.RouteResponse.prototype.getRoutelegsList = function () {
  return /** @type{!Array<!proto.geo.v1.RouteLeg>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.geo.v1.RouteLeg, 2)
  )
}

/**
 * @param {!Array<!proto.geo.v1.RouteLeg>} value
 * @return {!proto.geo.v1.RouteResponse} returns this
 */
proto.geo.v1.RouteResponse.prototype.setRoutelegsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value)
}

/**
 * @param {!proto.geo.v1.RouteLeg=} opt_value
 * @param {number=} opt_index
 * @return {!proto.geo.v1.RouteLeg}
 */
proto.geo.v1.RouteResponse.prototype.addRoutelegs = function (
  opt_value,
  opt_index
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    2,
    opt_value,
    proto.geo.v1.RouteLeg,
    opt_index
  )
}

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.geo.v1.RouteResponse} returns this
 */
proto.geo.v1.RouteResponse.prototype.clearRoutelegsList = function () {
  return this.setRoutelegsList([])
}

/**
 * @enum {number}
 */
proto.geo.v1.AddressType = {
  SHOP: 0,
  ORG: 1,
  PROFILE: 2,
  COURIER: 3,
  GEO: 4
}

goog.object.extend(exports, proto.geo.v1)
